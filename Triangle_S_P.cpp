/*
Автор: Игонин Владимир Юрьевич ИВТ-23
Условие: Треугольник задан координатами своих вершин. Найти:
         а) периметр треугольника;
         б) площадь треугольника;
*/

//директива include отвечает за включение содержимого другого файла в компилируемый файл
//библиотека C++ с классами, функциями и переменными для организации ввода-вывода(для функций cin, cout)
#include <iostream>

//библиотека C++ с функциями динамического управления памятью, генерацией случайных чисел, поиска, сортировки и преобразования типов данных, целой арифметики(для функций atof, system)
#include <cstdlib>

//модуль с вычислениями и проверкой(создан самостоятельно)
#include "Calc_test.h"

//используем пространство имен std для того, чтобы не писать перед функциями стандартных библиотек(cin, cout и т.д.) std
using namespace std;
//используем созданное самостоятельно пространство имен для созданных функций(CalcSide, CheckTriangle, CalcP, CalcS)
using namespace Geometry;
// Главная функция программы без аргументов, функция main не может быть перегруженна, поэтому название функции изменено
//int возвращаемое значение, mainwithotarg()-описание функции
int mainwithotarg()
{
    //system-функция, выполняющая заданную, через параметр syscom, системную команду
    //chcp 65001 > nul установливает кодировку юникод UTF8, chcp - изменить кодовую страницу
    system("chcp 65001 > nul");

    test(); //вызов функции проверки достоверности самостоятельно написанных функции

    double x1 = 0, y1 = 0, x2 = 0, y2 = 0, x3 = 0, y3 = 0; // Инициализируем переменные x1,y1,x2,y2,x3,y3 - координаты соответствующих вершин
    double sideA = 0, sideB = 0, sideC = 0;  //Инициализируем переменные для длин трех сторон
    double P = 0, S = 0; // Инициализируем переменные для периметра(P) и площади(S)

    // cout - Оператор вывода
    // << - операция вставки
    // cin - оператор ввода
    // >> - операция извлечения
    cout << "Введите координаты первой вершины: "; // Вывод подсказки
    cin >> x1 >> y1; // Ввод x и y первой вершины треугольника
    cout << "Введите координаты второй вершины: "; // Вывод подсказки
    cin >> x2 >> y2; // Ввод x и y второй вершины треугольника
    cout << "Введите координаты третьей вершины: "; // Вывод подсказки
    cin >> x3 >> y3; // Ввод x и y третьей вершины треугольника

    sideA = CalcSide(x1, y1, x2, y2); // Вычисление первой стороны треугольника
    sideB = CalcSide(x1, y1, x3, y3); // Вычисление второй стороны треугольника
    sideC = CalcSide(x2, y2, x3, y3); // Вычисление третьей стороны треугольника

    if (CheckTriangle(sideA, sideB, sideC) == false) // Если треугольник с такими сторонами не существует
    {
        cout << "Треугольник не существует"; // Вывод в консоль
        return 0; // Возвращаем 0
    }

    P = CalcP(sideA, sideB, sideC); // Вычисление периметра треугольника
    S = CalcS(sideA, sideB, sideC, P); // Вычисление площади треугольника
    cout << "Периметр треугольника: " << P << " " << "Площадь треугольника: " << S; // Вывод периметра и площади в консоль
    return 0; // Возвращаем 0
}

//главная функция программы, int возвращаемое значение, main(int argc, char* argv[])-описание функции
//argc - количество аргументов, argv - массив указателей на аргументы, начинается с 0-название программы
int main(int argc, char* argv[])
{
    //system-функция, выполняющая заданную, через параметр syscom, системную команду
    //chcp 65001 > nul установливает кодировку юникод UTF8, chcp - изменить кодовую страницу
    system("chcp 65001 > nul");

    if (argc == 1) // если пользователь не ввел аргументов(1 аргумент - название программы ./triangle.exe)
    {
        mainwithotarg(); // выполняется функция без аргументов
    }

    if ((argc == 2)||(argv[1] == "help")||(argv[1] == "--help")) // если пользователь ввел 1 аргумент и это help или --help
    {
        // cout - Оператор вывода
        // << - операция вставки
        cout << "Вычисление периметра и площади по координатам вершин треугольника" << "\n" << "Введите координаты вершин через пробел: " << "x1 y1 x2 y2 x3 y3" << "\n" << "Ввод help или --help выводит данную справку"; // выводится справка
        return 0; // Возвращаем 0
    }

    if ((argc > 1)&&(argc < 7)) // если пользователь ввел меньше 6 аргументов
    {
        // cout - Оператор вывода
        // << - операция вставки
        cout << "Введите 6 координат"; //выводится подсказка
        return 1; // Возвращаем 1
    }

    test(); //вызов функции проверки достоверности самостоятельно написанных функции

    //atof - функция преобразования строки в число типа double
    //x1,y1,x2,y2,x3,y3 - координаты соответствующих вершин
    double x1 = atof(argv[1]), y1 = atof(argv[2]), x2 = atof(argv[3]), y2 = atof(argv[4]), x3 = atof(argv[5]), y3 = atof(argv[6]); // Приравниваем переменные к введенным аргументам
    double sideA = 0, sideB = 0, sideC = 0; // Инициализируем переменные для длин трех сторон
    double P = 0, S = 0; // Инициализируем переменные для периметра(P) и площади(S)

    sideA = CalcSide(x1, y1, x2, y2); // Вычисление первой стороны треугольника
    sideB = CalcSide(x1, y1, x3, y3); // Вычисление второй стороны треугольника
    sideC = CalcSide(x2, y2, x3, y3); // Вычисление третьей стороны треугольника

    if (CheckTriangle(sideA, sideB, sideC) == false) // Если треугольник с такими сторонами не существует
    {
        cout << "Треугольник не существует"; // Вывод в консоль
        return 0; // Возвращаем 0
    }

    P = CalcP(sideA, sideB, sideC); // Вычисление периметра треугольника
    S = CalcS(sideA, sideB, sideC, P); // Вычисление площади треугольника
    cout << "Периметр треугольника: " << P << " " << "Площадь треугольника: " << S; // Вывод периметра и площади в консоль
    return 0; // Возвращаем 0
}